{"version":3,"sources":["jquery.orbitals.js"],"names":["$","createOrbitals","elements","opts","counter","angleIncrement","length","each","originHeight","this","parent","height","wrap","fromAngle","toAngle","keyframe","define","name","from","transform","toString","to","counterFromAngle","counterToAngle","duration","playKeyframe","timingFunction","iterationCount","css","transform-origin","position","margin","fn","orbitals","options","extend","defaults","width","jQuery"],"mappings":"CACA,SAAWA,GACP,YAcA,SAASC,GAAeC,EAAUC,GAC9B,GAAIC,GAAU,EACVC,EAAiB,IAAML,EAAEE,GAAUI,MACvCN,GAAEE,GAAUK,KAAK,WACb,GAAIC,GAAe,MAAaR,EAAES,MAAMC,SAASC,SAAW,EAAI,EAChEX,GAAES,MAAMG,KAAK,oBAAsBR,EAAU,mCAE7C,IAAIS,GAAaR,EAAeD,EAC5BU,EAAWT,EAAeD,EAAS,GACvCJ,GAAEe,SAASC,QACPC,KAAM,SAAWb,EACjBc,MACIC,UAAa,UAAYN,EAAUO,WAAa,QAEpDC,IACIF,UAAa,UAAYL,EAAQM,WAAa,SAItD,IAAIE,GAAoB,GAAGjB,EAAgBD,EACvCmB,EAAmB,GAAGlB,EAAgBD,EAAS,GACnDJ,GAAEe,SAASC,QACPC,KAAM,gBAAkBb,EACxBc,MACIC,UAAa,UAAYG,EAAmB,QAEhDD,IACIF,UAAa,UAAYI,EAAiB,SAGlD,IAAIC,GAAWrB,EAAKqB,QACpBxB,GAAES,MAAMC,SAASe,cACbR,KAAM,SAAWb,EACjBoB,SAAUA,EACVE,eAAgB,SAChBC,eAAgB,aAEpB3B,EAAES,MAAMgB,cACJR,KAAM,gBAAkBb,EACxBoB,SAAUA,EACVE,eAAgB,SAChBC,eAAgB,aAGpB3B,EAAES,MAAMC,SAASkB,KACbC,mBAAoBrB,EAAe,KACnCsB,SAAY,WACZC,OAAU,YAEd3B,MA9DRJ,EAAEgC,GAAGC,SAAW,SAAUC,GACtB,GAAI/B,GAAOH,EAAEmC,UAAWnC,EAAEgC,GAAGC,SAASG,SAAUF,EAShD,OARAzB,MAAKC,SAASE,KAAK,uCACnBZ,EAAE,oBAAoB4B,KAClBjB,OAAU,OACV0B,MAAS,SAIbpC,EAAeQ,KAAMN,IACd,GA0DXH,EAAEgC,GAAGC,SAASG,UACVZ,SAAU,QAGfc","file":"jquery.orbitals.min.js","sourcesContent":["\n(function ($) {\n    'use strict';\n    $.fn.orbitals = function (options) {\n        var opts = $.extend({}, $.fn.orbitals.defaults, options);\n        this.parent().wrap('<div class=\"orbital-rotater\"></div>');\n        $('.orbital-rotater').css({\n            'height': '100%',\n            'width': '100%'\n        });\n\n\n        createOrbitals(this, opts);\n        return false;\n    };\n\n    function createOrbitals(elements, opts) {\n        var counter = 0;\n        var angleIncrement = 360 / $(elements).length;\n        $(elements).each(function () {\n            var originHeight = '0' + ' ' + ($(this).parent().height() / 2 - 7);\n            $(this).wrap('<div id=\"orbital-' + counter + '\" class=\"orbital-wrapper\"></div>');\n\n            var fromAngle =  angleIncrement*counter;\n            var toAngle = (angleIncrement*counter)+360;\n            $.keyframe.define({\n                name: 'rotate' + counter,\n                from: {\n                    'transform': 'rotate(' + fromAngle.toString() + 'deg)' //Note that 'transform' will be autoprefixed for you\n                },\n                to: {\n                    'transform': 'rotate(' + toAngle.toString() + 'deg)' //Note that 'transform' will be autoprefixed for you\n                }\n            });\n\n            var counterFromAngle = (-1*angleIncrement)*counter;\n            var counterToAngle = ((-1*angleIncrement)*counter)-360;\n            $.keyframe.define({\n                name: 'counterrotate' + counter,\n                from: {\n                    'transform': 'rotate(' + counterFromAngle + 'deg)' //Note that 'transform' will be autoprefixed for you\n                },\n                to: {\n                    'transform': 'rotate(' + counterToAngle + 'deg)' //Note that 'transform' will be autoprefixed for you\n                }\n            });\n            var duration = opts.duration;\n            $(this).parent().playKeyframe({\n                name: 'rotate' + counter, // name of the keyframe you want to bind to the selected element\n                duration: duration, // [optional, default: 0, in ms] how long you want it to last in milliseconds\n                timingFunction: 'linear', // [optional, default: ease] specifies the speed curve of the animation\n                iterationCount: 'infinite' //[optional, default:1]  how many times you want the animation to repeat\n            });\n            $(this).playKeyframe({\n                name: 'counterrotate' + counter, // name of the keyframe you want to bind to the selected element\n                duration: duration, // [optional, default: 0, in ms] how long you want it to last in milliseconds\n                timingFunction: 'linear', // [optional, default: ease] specifies the speed curve of the animation\n                iterationCount: 'infinite' //[optional, default:1]  how many times you want the animation to repeat\n            });\n\n            $(this).parent().css({\n                'transform-origin': originHeight + 'px',\n                'position': 'absolute',\n                'margin': '7px 50%'\n            });\n            counter++;\n        });\n\n\n    }\n\n    $.fn.orbitals.defaults = {\n        duration: '90s'\n    };\n\n})(jQuery);"],"sourceRoot":"/source/"}